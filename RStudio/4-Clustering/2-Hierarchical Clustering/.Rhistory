setwd("D:/GitHub/Machine-Learning/RStudio/4-Clustering/1-K-Means Clustering")
dataset <- pd.read('mall.csv')
dataset <- read.csv('mall.csv')
dataset <- read.csv('mall.csv')
x <- dataset[4:5]
View(x)
# Önce set.seed() kullanmadan rastgele sayılar üretelim
random_numbers_1 <- sample(1:100, 5)
print(random_numbers_1)  # Her çalıştırdığınızda farklı rastgele sayılar elde edersiniz
# Şimdi set.seed() kullanarak tekrar aynı rastgele sayıları elde edelim
set.seed(123)  # 123 sayısını set.seed() fonksiyonuna geçiriyoruz
random_numbers_2 <- sample(1:100, 5)
print(random_numbers_2)  # Bu satırda random_numbers_1 ile aynı rastgele sayıları elde edersiniz
# Önce set.seed() kullanmadan rastgele sayılar üretelim
random_numbers_1 <- sample(1:100, 5)
print(random_numbers_1)  # Her çalıştırdığınızda farklı rastgele sayılar elde edersiniz
# Önce set.seed() kullanmadan rastgele sayılar üretelim
random_numbers_1 <- sample(1:100, 5)
print(random_numbers_1)  # Her çalıştırdığınızda farklı rastgele sayılar elde edersiniz
# Önce set.seed() kullanmadan rastgele sayılar üretelim
random_numbers_1 <- sample(1:100, 5)
print(random_numbers_1)  # Her çalıştırdığınızda farklı rastgele sayılar elde edersiniz
# Şimdi set.seed() kullanarak tekrar aynı rastgele sayıları elde edelim
set.seed(123)  # 123 sayısını set.seed() fonksiyonuna geçiriyoruz
random_numbers_2 <- sample(1:100, 5)
print(random_numbers_2)  # Bu satırda random_numbers_1 ile aynı rastgele sayıları elde edersiniz
# Önce set.seed() kullanmadan rastgele sayılar üretelim
random_numbers_1 <- sample(1:100, 5)
print(random_numbers_1)  # Her çalıştırdığınızda farklı rastgele sayılar elde edersiniz
# Şimdi set.seed() kullanarak tekrar aynı rastgele sayıları elde edelim
set.seed(123)  # 123 sayısını set.seed() fonksiyonuna geçiriyoruz
random_numbers_2 <- sample(1:100, 5)
print(random_numbers_2)  # Bu satırda random_numbers_1 ile aynı rastgele sayıları elde edersiniz
# Önce set.seed() kullanmadan rastgele sayılar üretelim
random_numbers_1 <- sample(1:100, 5)
print(random_numbers_1)  # Her çalıştırdığınızda farklı rastgele sayılar elde edersiniz
# Şimdi set.seed() kullanarak tekrar aynı rastgele sayıları elde edelim
set.seed(123)  # 123 sayısını set.seed() fonksiyonuna geçiriyoruz
random_numbers_2 <- sample(1:100, 5)
print(random_numbers_2)  # Bu satırda random_numbers_1 ile aynı rastgele sayıları elde edersiniz
# Önce set.seed() kullanmadan rastgele sayılar üretelim
random_numbers_1 <- sample(1:100, 5)
print(random_numbers_1)  # Her çalıştırdığınızda farklı rastgele sayılar elde edersiniz
# Şimdi set.seed() kullanarak tekrar aynı rastgele sayıları elde edelim
set.seed(123)  # 123 sayısını set.seed() fonksiyonuna geçiriyoruz
random_numbers_2 <- sample(1:100, 5)
print(random_numbers_2)  # Bu satırda random_numbers_1 ile aynı rastgele sayıları elde edersiniz
# Önce set.seed() kullanmadan rastgele sayılar üretelim
random_numbers_1 <- sample(1:100, 5)
print(random_numbers_1)  # Her çalıştırdığınızda farklı rastgele sayılar elde edersiniz
# Şimdi set.seed() kullanarak tekrar aynı rastgele sayıları elde edelim
set.seed(123)  # 123 sayısını set.seed() fonksiyonuna geçiriyoruz
random_numbers_2 <- sample(1:100, 5)
print(random_numbers_2)  # Bu satırda random_numbers_1 ile aynı rastgele sayıları elde edersiniz
# Önce set.seed() kullanmadan rastgele sayılar üretelim
random_numbers_1 <- sample(1:100, 5)
print(random_numbers_1)  # Her çalıştırdığınızda farklı rastgele sayılar elde edersiniz
# Şimdi set.seed() kullanarak tekrar aynı rastgele sayıları elde edelim
set.seed(123)  # 123 sayısını set.seed() fonksiyonuna geçiriyoruz
random_numbers_2 <- sample(1:100, 5)
print(random_numbers_2)  # Bu satırda random_numbers_1 ile aynı rastgele sayıları elde edersiniz
# Önce set.seed() kullanmadan rastgele sayılar üretelim
random_numbers_1 <- sample(1:100, 5)
print(random_numbers_1)  # Her çalıştırdığınızda farklı rastgele sayılar elde edersiniz
# Şimdi set.seed() kullanarak tekrar aynı rastgele sayıları elde edelim
set.seed(123)  # 123 sayısını set.seed() fonksiyonuna geçiriyoruz
random_numbers_2 <- sample(1:100, 5)
print(random_numbers_2)  # Bu satırda random_numbers_1 ile aynı rastgele sayıları elde edersiniz
# Önce set.seed() kullanmadan rastgele sayılar üretelim
random_numbers_1 <- sample(1:100, 5)
print(random_numbers_1)  # Her çalıştırdığınızda farklı rastgele sayılar elde edersiniz
# Şimdi set.seed() kullanarak tekrar aynı rastgele sayıları elde edelim
set.seed(123)  # 123 sayısını set.seed() fonksiyonuna geçiriyoruz
random_numbers_2 <- sample(1:100, 5)
print(random_numbers_2)  # Bu satırda random_numbers_1 ile aynı rastgele sayıları elde edersiniz
dataset <- read.csv('mall.csv')
x <- dataset[4:5]
set.seed(6 )
dataset <- read.csv('mall.csv')
x <- dataset[4:5]
set.seed(6 )
wcss <- vector()
for(i in 1:10) wcss[i] <- sum(kmeans(X, i)$withinss)
dataset <- read.csv('mall.csv')
x <- dataset[4:5]
set.seed(6 )
wcss <- vector()
for(i in 1:10) wcss[i] <- sum(kmeans(X, i)$withinss)
dataset <- read.csv('mall.csv')
X <- dataset[4:5]
set.seed(6 )
wcss <- vector()
for(i in 1:10) wcss[i] <- sum(kmeans(X, i)$withinss)
plot(1:10, wcss, type = "b", main = paste('Clusters of clients'),
xlab = "Number of clusters", ylab = "WCSS")
dataset <- read.csv('mall.csv')
X <- dataset[4:5]
set.seed(6 )
wcss <- vector()
for(i in 1:10) wcss[i] <- sum(kmeans(X, i)$withinss)
plot(1:10, wcss, type = "b", main = paste('Clusters of clients'),
xlab = "Number of clusters", ylab = "WCSS")
set.seed(29)
kmeans <- kmeans(X, 5, max = 300, nstart = 10)
dataset <- read.csv('mall.csv')
X <- dataset[4:5]
set.seed(6 )
wcss <- vector()
for(i in 1:10) wcss[i] <- sum(kmeans(X, i)$withinss)
plot(1:10, wcss, type = "b", main = paste('Clusters of clients'),
xlab = "Number of clusters", ylab = "WCSS")
set.seed(29)
kmeans <- kmeans(X, 5, iter.max = 300, nstart = 10)
dataset <- read.csv('mall.csv')
X <- dataset[4:5]
set.seed(6 )
wcss <- vector()
for(i in 1:10) wcss[i] <- sum(kmeans(X, i)$withinss)
plot(1:10, wcss, type = "b", main = paste('Clusters of clients'),
xlab = "Number of clusters", ylab = "WCSS")
set.seed(29)
kmeans <- kmeans(X, 5, iter.max = 300, nstart = 10)
View(kmeans)
View(dataset)
dataset <- read.csv('mall.csv')
X <- dataset[4:5]
set.seed(6 )
wcss <- vector()
for(i in 1:10) wcss[i] <- sum(kmeans(X, i)$withinss)
plot(1:10, wcss, type = "b", main = paste('Clusters of clients'),
xlab = "Number of clusters", ylab = "WCSS")
set.seed(29)
kmeans <- kmeans(X, 5, iter.max = 300, nstart = 10)
library(cluster)
clusplot(X,
kmeans$cluster,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 2,
plotchar = FALSE,
span = TRUE,
main = paste("Clusters of clients"),
xlab = "Annual Income",
ylab = "Spending Score")
View(dataset)
setwd("D:/GitHub/Machine-Learning/RStudio/4-Clustering/2-Hierarchical Clustering")
dataset = read.csv('mall.csv')
X = dataset[4:5]
dendrogram = hclust(dist(X, method = 'euclidean'),
method = 'ward.D')
plot(dendrogram,
main = paste('Dendrogram'),
xlab = 'Customers',
ylab = 'Euclidean Distances')
dataset = read.csv('mall.csv')
X = dataset[4:5]
dendrogram = hclust(dist(X, method = 'euclidean'),
method = 'ward.D')
plot(dendrogram,
main = paste('Dendrogram'),
xlab = 'Customers',
ylab = 'Euclidean Distances')
hc = hclust(dist(X, method = 'euclidean'),
method = 'ward.D')
y_hc = cutree(hc, 5, )
dataset = read.csv('mall.csv')
X = dataset[4:5]
dendrogram = hclust(dist(X, method = 'euclidean'),
method = 'ward.D')
plot(dendrogram,
main = paste('Dendrogram'),
xlab = 'Customers',
ylab = 'Euclidean Distances')
hc = hclust(dist(X, method = 'euclidean'),
method = 'ward.D')
y_hc = cutree(hc, 5, )
library(cluster)
clusplot(X,
y_hc,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 2,
plotchar = FALSE,
span = TRUE,
main = paste("Clusters of clients"),
xlab = "Annual Income",
ylab = "Spending Score")
